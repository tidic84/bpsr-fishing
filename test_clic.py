"""
Script de test pour diagnostiquer les probl√®mes de clic
Utilisez ce script pour v√©rifier que PyAutoGUI peut cliquer correctement
"""

import pyautogui
import time
import sys

print("\n" + "="*70)
print(" TEST DE DIAGNOSTIC DES CLICS")
print("="*70 + "\n")

# V√©rifier les param√®tres de PyAutoGUI
print("Configuration actuelle de PyAutoGUI:")
print(f"  - PAUSE entre actions : {pyautogui.PAUSE}s")
print(f"  - FAILSAFE activ√©     : {pyautogui.FAILSAFE}")
print(f"  - R√©solution √©cran    : {pyautogui.size()}")
print()

# Test 1: Position actuelle de la souris
print("="*70)
print(" TEST 1: Position de la souris")
print("="*70)
print("\nD√©placez votre souris et observez les coordonn√©es pendant 5 secondes...")
print("(Appuyez sur Ctrl+C pour arr√™ter)")

try:
    for i in range(50):  # 5 secondes (50 * 0.1s)
        x, y = pyautogui.position()
        print(f"\rPosition actuelle: X={x:4d}, Y={y:4d}", end='', flush=True)
        time.sleep(0.1)
    print("\n")
except KeyboardInterrupt:
    print("\n\n‚ö† Interrompu par l'utilisateur\n")

# Test 2: D√©placement de la souris
print("="*70)
print(" TEST 2: D√©placement de la souris")
print("="*70)
print("\nLe curseur va se d√©placer vers diff√©rentes positions dans 3 secondes...")
print("‚ö† NE TOUCHEZ PAS la souris pendant le test!")

for i in range(3, 0, -1):
    print(f"{i}...")
    time.sleep(1)

try:
    screen_width, screen_height = pyautogui.size()
    center_x = screen_width // 2
    center_y = screen_height // 2
    
    positions = [
        (center_x, center_y, "Centre de l'√©cran"),
        (100, 100, "Coin sup√©rieur gauche"),
        (screen_width - 100, 100, "Coin sup√©rieur droit"),
        (center_x, center_y, "Retour au centre"),
    ]
    
    for x, y, description in positions:
        print(f"\n‚Üí D√©placement vers {description} ({x}, {y})...")
        pyautogui.moveTo(x, y, duration=0.5)
        time.sleep(0.5)
        actual_x, actual_y = pyautogui.position()
        
        if abs(actual_x - x) < 5 and abs(actual_y - y) < 5:
            print(f"  ‚úì Position atteinte: ({actual_x}, {actual_y})")
        else:
            print(f"  ‚ö† √âcart d√©tect√©! Vis√©e: ({x}, {y}), R√©elle: ({actual_x}, {actual_y})")
    
    print("\n‚úì Test de d√©placement termin√© avec succ√®s!")
    
except Exception as e:
    print(f"\n‚ùå Erreur lors du d√©placement: {e}")
    import traceback
    traceback.print_exc()
    sys.exit(1)

# Test 3: Clic de souris
print("\n" + "="*70)
print(" TEST 3: Clics de souris")
print("="*70)
print("\nLe bot va effectuer 3 clics au centre de l'√©cran dans 5 secondes...")
print("‚ö† Assurez-vous qu'une fen√™tre de test est ouverte (ex: Bloc-notes, navigateur)")
print("‚ö† Vous devriez voir les clics s'effectuer!")

input("\nAppuyez sur ENTR√âE pour continuer (ou Ctrl+C pour annuler)...")

try:
    center_x = screen_width // 2
    center_y = screen_height // 2
    
    print("\nD√©placement vers le centre de l'√©cran...")
    pyautogui.moveTo(center_x, center_y, duration=0.3)
    time.sleep(1)
    
    for i in range(1, 4):
        print(f"\nClic #{i}...")
        print(f"  ‚Üí Position: ({center_x}, {center_y})")
        
        # M√©thode 1: Clic simple
        pyautogui.click(center_x, center_y)
        print(f"  ‚úì Clic effectu√©!")
        
        time.sleep(1)
    
    print("\n‚úì Test de clic termin√©!")
    
except Exception as e:
    print(f"\n‚ùå Erreur lors du clic: {e}")
    import traceback
    traceback.print_exc()
    sys.exit(1)

# Test 4: Clic avec diff√©rentes m√©thodes
print("\n" + "="*70)
print(" TEST 4: M√©thodes alternatives de clic")
print("="*70)

print("\nTest de diff√©rentes m√©thodes de clic...")

input("\nAppuyez sur ENTR√âE pour tester les m√©thodes alternatives...")

try:
    center_x = screen_width // 2
    center_y = screen_height // 2
    
    # M√©thode 1: click() simple
    print("\n1. M√©thode: pyautogui.click(x, y)")
    pyautogui.moveTo(center_x, center_y, duration=0.2)
    time.sleep(0.2)
    pyautogui.click()
    print("   ‚úì Clic envoy√©")
    time.sleep(1)
    
    # M√©thode 2: click avec coordonn√©es
    print("\n2. M√©thode: pyautogui.click(x, y) avec coordonn√©es")
    pyautogui.click(center_x, center_y)
    print("   ‚úì Clic envoy√©")
    time.sleep(1)
    
    # M√©thode 3: mouseDown + mouseUp
    print("\n3. M√©thode: mouseDown() + mouseUp()")
    pyautogui.moveTo(center_x, center_y, duration=0.2)
    time.sleep(0.1)
    pyautogui.mouseDown(button='left')
    time.sleep(0.05)
    pyautogui.mouseUp(button='left')
    print("   ‚úì Clic envoy√©")
    time.sleep(1)
    
    # M√©thode 4: click avec button explicite
    print("\n4. M√©thode: pyautogui.click(x, y, button='left')")
    pyautogui.click(center_x, center_y, button='left')
    print("   ‚úì Clic envoy√©")
    time.sleep(1)
    
    print("\n‚úì Toutes les m√©thodes test√©es!")
    
except Exception as e:
    print(f"\n‚ùå Erreur: {e}")
    import traceback
    traceback.print_exc()

# Test 5: Permissions et limitations
print("\n" + "="*70)
print(" TEST 5: V√©rification des permissions")
print("="*70)

print("\nV√©rification des limitations du syst√®me...")

# V√©rifier si on est sous Windows avec UAC
if sys.platform == 'win32':
    print("\n‚ö† Syst√®me Windows d√©tect√©")
    print("\nLimitations possibles:")
    print("  - Les applications en mode administrateur peuvent bloquer PyAutoGUI")
    print("  - Les jeux en plein √©cran exclusif peuvent ne pas recevoir les clics")
    print("  - Certains antivirus peuvent bloquer l'automatisation")
    print("\nSolutions recommand√©es:")
    print("  1. Lancez le jeu en mode fen√™tr√© (ou fen√™tr√© sans bordure)")
    print("  2. Ajoutez une exception dans votre antivirus pour Python")
    print("  3. N'ex√©cutez PAS le jeu en mode administrateur")
    print("  4. D√©sactivez temporairement les overlays (Discord, GeForce, etc.)")

# Test de permission d'√©criture
print("\n" + "="*70)
print(" R√âSUM√â DU DIAGNOSTIC")
print("="*70)

print("\n‚úì Si vous avez vu la souris bouger et les messages de succ√®s,")
print("  PyAutoGUI fonctionne correctement sur votre syst√®me.")

print("\n‚ö† Si le bot ne clique toujours pas dans le jeu:")
print("  1. Le jeu doit √™tre en mode FEN√äTR√â (pas plein √©cran exclusif)")
print("  2. Ne lancez PAS le jeu en administrateur")
print("  3. Le jeu doit √™tre au PREMIER PLAN")
print("  4. Ajoutez des d√©lais plus longs (augmentez wait_after_click)")
print("  5. Certains jeux bloquent les entr√©es virtuelles")

print("\nüí° Essayez maintenant avec le jeu:")
print("  1. Ouvrez votre jeu en mode FEN√äTR√â")
print("  2. Placez une fen√™tre de Bloc-notes par-dessus")
print("  3. Relancez ce test pour voir si les clics fonctionnent")

print("\n" + "="*70)
print(" Test termin√©!")
print("="*70 + "\n")

